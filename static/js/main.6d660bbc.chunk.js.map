{"version":3,"sources":["components/title.js","components/description.js","components/button.js","components/board.js","components/select.js","components/range-input.js","components/label.js","App.js","serviceWorker.js","index.js"],"names":["Title","text","Description","split","map","index","Fragment","key","defaultProps","Button","value","onClick","className","type","e","target","blur","Board","ROWS","COLS","rows","r","cols","c","col","id","push","row","Select","options","player","onChange","option","RangeInput","min","max","step","defaultValue","Label","OPTIONS","App","props","runAI","state","winner","clearTimeout","timer","setTimeout","curPlayer","p1","randomAI","p2","aiSpeed","handleSelectChange","setState","selectedIndex","handleNewGame","board","Array","fill","Math","floor","random","movesRemaining","button","document","getElementById","classList","contains","remove","handlePlayerClick","dropDisc","add","newBoard","checkWin","win","i","leftBound","rightBound","topBound","bottomBound","checkWinHelper","newRightBound","incR","incC","invertR","invertC","j","updateState","validCols","this","length","turnText","href","bannerColor","octoColor","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6d660bbc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Title = ({ text }) => {\r\n  return <h1>{text}</h1>;\r\n};\r\n\r\nTitle.propTypes = {\r\n  text: PropTypes.string\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Description = ({ text }) => {\r\n  const addLineBreaks = string =>\r\n    string.split(\"\\n\").map((text, index) => (\r\n      <React.Fragment key={`${text}-${index}`}>\r\n        {text}\r\n        <br />\r\n      </React.Fragment>\r\n    ));\r\n\r\n  return <h5>{addLineBreaks(text)}</h5>;\r\n};\r\n\r\nDescription.defaultProps = {\r\n  text: \"Default description\"\r\n};\r\n\r\nDescription.propTypes = {\r\n  text: PropTypes.string\r\n};\r\n\r\nexport default Description;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ value, onClick }) => {\r\n  const handleOnClick = (e) => {\r\n    e.target.blur();\r\n    onClick();\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"btn btn-primary btn-lg\"\r\n      type=\"button\"\r\n      onClick={handleOnClick}\r\n    >\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  value: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst Board = ({ ROWS, COLS, onClick }) => {\r\n  const rows = [];\r\n  for (let r = 0; r < ROWS; r++) {\r\n    const cols = [];\r\n    for (let c = 0; c < COLS; c++) {\r\n      const col = (\r\n        <td key={r + \"-\" + c}>\r\n          <button\r\n            type=\"button\"\r\n            className=\"board-button\"\r\n            id={`button-${r}-${c}`}\r\n            onClick={() => onClick(c)}\r\n          ></button>\r\n        </td>\r\n      );\r\n      cols.push(col);\r\n    }\r\n    const row = <tr key={r}>{cols}</tr>;\r\n    rows.push(row);\r\n  }\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table\">\r\n        <tbody>{rows}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ options, player, onChange }) => {\r\n  return (\r\n    <select onChange={onChange}>\r\n      {options.map((option) => {\r\n        return <option key={`p${player}-${option}`}>{option}</option>;\r\n      })}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RangeInput = ({ min, max, step, defaultValue, id, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"range\"\r\n      min={min}\r\n      max={max}\r\n      step={step}\r\n      defaultValue={defaultValue}\r\n      id={id}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nRangeInput.defaultProps = {\r\n  min: 0,\r\n  max: 1,\r\n  step: 1,\r\n  defaultValue: 0,\r\n  id: \"\"\r\n};\r\n\r\nRangeInput.propTypes = {\r\n  min: PropTypes.number,\r\n  max: PropTypes.number,\r\n  step: PropTypes.number,\r\n  defaultValue: PropTypes.number,\r\n  id: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default RangeInput;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Label = ({ text, value }) => {\r\n  return (\r\n    <h5 className=\"text-break\">\r\n      {text}: {value}\r\n    </h5>\r\n  );\r\n};\r\n\r\nLabel.defaultProps = {\r\n  text: \"\",\r\n  value: 0\r\n};\r\n\r\nLabel.propTypes = {\r\n  text: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n};\r\n\r\nexport default Label;\r\n","import React, { Component } from \"react\";\nimport Title from \"./components/title\";\nimport Description from \"./components/description\";\nimport Button from \"./components/button\";\nimport GithubCorner from \"react-github-corner\";\nimport Board from \"./components/board\";\nimport Select from \"./components/select\";\nimport RangeInput from \"./components/range-input\";\nimport Label from \"./components/label\";\n\nconst ROWS = 6;\nconst COLS = 7;\nconst IN_A_ROW = 4;\nconst OPTIONS = [\n  \"Player\",\n  \"Easy (random)\",\n  \"Normal (shallow minimax)\",\n  \"Hard (neuroevolution)\",\n  \"Crazy (deep minimax)\",\n];\nconst AI_SPEED = 100;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: new Array(ROWS).fill(0).map(() => new Array(COLS).fill(0)),\n      curPlayer: 1 + Math.floor(2 * Math.random()),\n      winner: -1, // -1: game in progress, 0: draw, 1: player 1, 2: player 2\n      p1: 0, // 0: player, 1: easy, 2: normal, 3: hard, 4: crazy\n      p2: 0,\n      movesRemaining: ROWS * COLS,\n      aiSpeed: 0.2,\n    };\n  }\n\n  runAI = () => {\n    // Only run AI if not game over\n    if (this.state.winner !== -1) {\n      return;\n    }\n\n    clearTimeout(this.timer);\n    this.timer = setTimeout(() => {\n      if (this.state.curPlayer === 1 && this.state.p1 !== 0) {\n        // Run AI for player 1\n        if (this.state.p1 === 1) {\n          this.randomAI();\n        } else if (this.state.p1 === 2) {\n        } else if (this.state.p1 === 3) {\n        } else if (this.state.p1 === 4) {\n        }\n      } else if (this.state.curPlayer === 2 && this.state.p2 !== 0) {\n        // Run AI for player 2\n        if (this.state.p2 === 1) {\n          this.randomAI();\n        } else if (this.state.p2 === 2) {\n        } else if (this.state.p2 === 3) {\n        } else if (this.state.p2 === 4) {\n        }\n      }\n    }, AI_SPEED / this.state.aiSpeed);\n  };\n\n  randomAI() {\n    const validCols = [];\n    for (let c = 0; c < COLS; c++) {\n      if (this.state.board[0][c] === 0) {\n        validCols.push(c);\n      }\n    }\n    const col = validCols[Math.floor(Math.random() * validCols.length)];\n    this.dropDisc(col);\n  }\n\n  handleSelectChange = (e, player) => {\n    if (player === 1) {\n      this.setState(\n        {\n          p1: e.target.selectedIndex,\n        },\n        () => this.runAI()\n      );\n    } else if (player === 2) {\n      this.setState(\n        {\n          p2: e.target.selectedIndex,\n        },\n        () => this.runAI()\n      );\n    }\n  };\n\n  handleNewGame = () => {\n    // Reset board and choose random player to start\n    this.setState(\n      {\n        board: new Array(ROWS).fill(0).map(() => new Array(COLS).fill(0)),\n        curPlayer: 1 + Math.floor(2 * Math.random()),\n        winner: -1,\n        movesRemaining: ROWS * COLS,\n      },\n      () => this.runAI()\n    );\n\n    // Reset board button styles\n    for (let r = 0; r < ROWS; r++) {\n      for (let c = 0; c < COLS; c++) {\n        const button = document.getElementById(`button-${r}-${c}`);\n        if (button.classList.contains(\"p1\")) {\n          button.classList.remove(\"p1\");\n        }\n        if (button.classList.contains(\"p2\")) {\n          button.classList.remove(\"p2\");\n        }\n        if (button.classList.contains(\"win\")) {\n          button.classList.remove(\"win\");\n        }\n      }\n    }\n  };\n\n  handlePlayerClick = (col) => {\n    // Don't allow player to drop disc when AI's turn\n    if (\n      (this.state.curPlayer === 1 && this.state.p1 === 0) ||\n      (this.state.curPlayer === 2 && this.state.p2 === 0)\n    ) {\n      this.dropDisc(col);\n    }\n  };\n\n  dropDisc = (col) => {\n    // Don't allow drop if game over\n    if (this.state.winner !== -1) {\n      return;\n    }\n\n    for (let r = ROWS - 1; r >= 0; r--) {\n      if (this.state.board[r][col] === 0) {\n        // Add player class to button to change style\n        const button = document.getElementById(`button-${r}-${col}`);\n        button.classList.add(`p${this.state.curPlayer}`);\n\n        // Copy board and drop disc\n        const newBoard = this.state.board;\n        newBoard[r][col] = this.state.curPlayer;\n\n        // Save current player to check win\n        const player = this.state.curPlayer;\n\n        // Update board and current player\n        this.setState(\n          {\n            board: newBoard,\n            curPlayer: (this.state.curPlayer % 2) + 1,\n            movesRemaining: this.state.movesRemaining - 1,\n          },\n          () => {\n            // Check win after setting updated board\n            if (this.checkWin(r, col, player)) {\n              this.setState({ winner: player });\n            } else if (this.state.movesRemaining === 0) {\n              // Draw\n              this.setState({ winner: 0 });\n            } else {\n              this.runAI();\n            }\n          }\n        );\n\n        break;\n      }\n    }\n  };\n\n  checkWin = (row, col, player) => {\n    let win = false;\n\n    // Pivot on the placed disk\n    for (let i = 0; i < IN_A_ROW; i++) {\n      const leftBound = col - i;\n      const rightBound = col + IN_A_ROW - i - 1;\n      const topBound = row - i;\n      const bottomBound = row + IN_A_ROW - i - 1;\n\n      // Horizontal, right to left\n      if (leftBound >= 0 && rightBound < COLS) {\n        win =\n          win ||\n          this.checkWinHelper(\n            row,\n            leftBound,\n            false,\n            true,\n            false,\n            false,\n            player\n          );\n      }\n\n      // Vertical, bottom to top\n      if (topBound >= 0 && bottomBound < ROWS) {\n        win =\n          win ||\n          this.checkWinHelper(topBound, col, true, false, false, false, player);\n      }\n\n      // Negative Diagonal, bottom right to top left\n      if (\n        leftBound >= 0 &&\n        rightBound < COLS &&\n        topBound >= 0 &&\n        bottomBound < ROWS\n      ) {\n        win =\n          win ||\n          this.checkWinHelper(\n            topBound,\n            leftBound,\n            true,\n            true,\n            false,\n            false,\n            player\n          );\n      }\n\n      // Positive Diagonal, bottom left to top right\n      const newLeftBound = col - IN_A_ROW + i + 1;\n      const newRightBound = col + i;\n      if (\n        newLeftBound >= 0 &&\n        newRightBound < COLS &&\n        topBound >= 0 &&\n        bottomBound < ROWS\n      ) {\n        win =\n          win ||\n          this.checkWinHelper(\n            topBound,\n            newRightBound,\n            true,\n            true,\n            false,\n            true,\n            player\n          );\n      }\n    }\n\n    return win;\n  };\n\n  checkWinHelper = (r, c, incR, incC, invertR, invertC, player) => {\n    // Check if all discs by player\n    for (let j = 0; j < IN_A_ROW; j++) {\n      if (\n        this.state.board[r + (incR ? (invertR ? -j : j) : 0)][\n          c + (incC ? (invertC ? -j : j) : 0)\n        ] !== player\n      ) {\n        return false;\n      }\n    }\n\n    // Add win class to style button\n    for (let j = 0; j < IN_A_ROW; j++) {\n      const button = document.getElementById(\n        `button-${r + (incR ? (invertR ? -j : j) : 0)}-${\n          c + (incC ? (invertC ? -j : j) : 0)\n        }`\n      );\n      if (!button.classList.contains(\"win\")) {\n        button.classList.add(\"win\");\n      }\n    }\n\n    return true;\n  };\n\n  updateState = (e) => {\n    this.setState(\n      {\n        [e.target.id]: e.target.value,\n      },\n      () => this.runAI()\n    );\n  };\n\n  render() {\n    let turnText;\n    if (this.state.winner !== -1) {\n      if (this.state.winner === 0) {\n        turnText = \"Draw\";\n      } else {\n        turnText = `Player ${this.state.winner} wins`;\n      }\n    } else {\n      turnText = `Player ${this.state.curPlayer} turn`;\n    }\n\n    return (\n      <div className=\"App container-fluid text-center pt-5\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Title text=\"Connect 4 AI\" />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <Description\n              text={\"Play versus Player/AI or watch AI play against AI.\"}\n            />\n          </div>\n        </div>\n        <div className=\"row justify-content-center\">\n          <div className=\"col col-auto pt-3\">\n            <h4>Player 1</h4>\n            <Select\n              options={OPTIONS}\n              player={1}\n              onChange={(e) => this.handleSelectChange(e, 1)}\n            />\n          </div>\n          <div className=\"col col-auto pt-3\">\n            <h4>Player 2</h4>\n            <Select\n              options={OPTIONS}\n              player={2}\n              onChange={(e) => this.handleSelectChange(e, 2)}\n            />\n          </div>\n        </div>\n        <div className=\"row justify-content-center pt-3\">\n          <div className=\"col col-10 col-sm-8 col-md-6 col-lg-4 col-xl-2\">\n            <RangeInput\n              min={0.01}\n              max={1}\n              step={0.01}\n              defaultValue={this.state.aiSpeed}\n              id=\"aiSpeed\"\n              onChange={this.updateState}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <Label text=\"AI speed\" value={this.state.aiSpeed} />\n          </div>\n        </div>\n        <div className=\"row justify-content-center pt-3\">\n          <div className=\"col\">\n            <Button value=\"New Game\" onClick={this.handleNewGame} />\n          </div>\n        </div>\n        <div className=\"row justify-content-center\">\n          <div className=\"col col-auto pt-5\">\n            <h4>{turnText}</h4>\n          </div>\n        </div>\n        <div className=\"row justify-content-center pt-3\">\n          <div className=\"col col-auto\">\n            <Board ROWS={ROWS} COLS={COLS} onClick={this.handlePlayerClick} />\n          </div>\n        </div>\n        <GithubCorner\n          href=\"https://github.com/ryantran2165/connect4-ai\"\n          bannerColor=\"#222\"\n          octoColor=\"#7fffd4\"\n          target=\"_blank\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}